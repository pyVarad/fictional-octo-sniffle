version: '3.2'
services:
  web:
    image: varadag/flaskapp
    hostname: web
    container_name: web
    build: 
      context: ./images
      dockerfile: Dockerfile_python.yml
    ports: 
      - "5000:5000"
    environment:
      - AMQP_URI=amqp://amqp:5672
    volumes:
      - type: bind
        source: ./app
        target: /app
    command: ["uwsgi", "--socket", "0.0.0.0:5000", "--protocol=http", "-w", "wsgi:application", "--py-autoreload=1"]

  amqp:
    image: varadag/amqp
    hostname: amqp
    container_name: amqp
    build:
      context: ./images
      dockerfile: Dockerfile_amqp.yml
    ports:
      - "15672:15672"
      - "5672:5672"
      - "8080:8080"

  nginx:
    build: varadag/nginx
    hostname: nginx
    container_name: frontend
    build:
      context: ./images
      dockerfile: Dockerfile_nginx.yml
    ports:
        - "80:80"
        - "443:443"
    depends_on:
      - "web"

  worker:
    image: varadag/libraryworker
    hostname: library
    container_name: library
    build: 
      context: ./images
      dockerfile: Dockerfile_library_worker.yml
    environment:
      - AMQP_URI=amqp://amqp:5672
    volumes:
      - type: bind
        source: ./app/web/library/workers
        target: /app
    depends_on:
      - "web"
    command: ["python", "libraryWorker.py"]

  mongo:
    image: mongo:3.6.11-stretch
    hostname: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      - AUTH=yes
      - STORAGE_ENGINE=wiredTiger
      - JOURNALING=yes
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    depends_on:
      - "web"
  
  mongo-express:
    image: mongo-express
    hostname: mongo-express
    container_name: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
        depends_on:
      - "mongo"